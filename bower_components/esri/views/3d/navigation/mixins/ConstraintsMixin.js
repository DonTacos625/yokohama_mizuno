// COPYRIGHT Â© 2016 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.1/esri/copyright.txt for details.

define(["../../../../core/Accessor","../../../../core/watchUtils","../../../../geometry/Point","../../support/mathUtils","../../lib/glMatrix","../../constraints/SceneViewAltitudeConstraint","../../webgl-engine/lib/Camera","../../webgl-engine/lib/IntervalUtilities"],function(t,e,i,n,a,s,r,o){function l(t){return new D.Tilt({min:function(){return.01},max:function(){return n.deg2rad(t.tilt.max)}})}function h(t){return new D.Altitude({min:function(){return t.altitude.min},max:function(){return t.altitude.max}})}function d(t){return new D.Collision(t.collision.enabled)}function c(t,e){return t&&e&&t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}var u=2,_=4,m=5,C=.02,g=a.vec3d,p=a.mat4d,v=new i,f=g.create(),E=g.create(),y=p.create(),H=g.create(),M=g.create(),x=g.create(),T=new r,U=g.create(),A={tilt:0,distance:0},b={distance:0,maxFarNearRatio:0},D=t.createSubclass([],{declaredClass:"esri.views.3d.navigation.mixins.ConstraintsMixin",properties:{userConstraints:{set:function(t){this._disconnectUserConstraints(),this._connectUserConstraints(t),this._set("userConstraints",t)}},elevationProvider:{value:null,set:function(t){null!==this._elevationChangeHandle&&(this._elevationChangeHandle.remove(),this._elevationChangeHandle=null),null!==this._elevationChangeTileHandle&&(this._elevationChangeTileHandle.remove(),this._elevationChangeTileHandle=null),null!==t&&(this._elevationChangeHandle=t.on("elevation-change",this._elevationChangeHandler.bind(this)),this._elevationChangeTileHandle=t.on("elevation-change-tile",this._elevationChangeTileHandler.bind(this))),this._set("elevationProvider",t)}},minPoiDist:{get:function(){return this._minPoiDistInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},cameraElevationMargin:{get:function(){return this._cameraElevationMarginInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},minNearDistance:{get:function(){return this._minNearDistanceInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},renderUnitInMeters:{},constraintsEnabled:{value:!0}},constructor:function(){this._userConstraints=null,this._userConstraintsHandles=[],this._clipDistanceHandles=[],this._tiltHandles=[],this._altitudeHandles=[],this.constraints={tilt:this.defaultConstraints.tilt,altitude:this.defaultConstraints.altitude,collision:this.defaultConstraints.collision},this._tiltModeHandler=this._tiltModeHandler.bind(this),this._tiltMaxHandler=this._tiltMaxHandler.bind(this),this._altitudeModeHandler=this._altitudeModeHandler.bind(this),this._altitudeMinMaxHandler=this._altitudeMinMaxHandler.bind(this),this._clipDistanceModeHandler=this._clipDistanceModeHandler.bind(this),this._clipDistanceNearFarHandler=this._clipDistanceNearFarHandler.bind(this),this._collisionEnabledHandler=this._collisionEnabledHandler.bind(this),this.enableElevationUpdates=!0,this.updateTargetByElevationUpdates=D.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT,this._recomputeTargetCenterForElevationChange=!1,this._elevationChangeHandle=null,this._elevationChangeTileHandle=null,this._terrainElevationBelowCamera=null,this._terrainElevationAtCameraEye=null,this._autoAltitudeConstraints={min:s.MIN_DEFAULT,max:s.MAX_DEFAULT},this.maxFarNearRatio=2e4,this._minNearDistanceInMeters=u,this._minPoiDistInMeters=_,this._cameraElevationMarginInMeters=m},initialize:function(){this._targetCameraBeforeElevationUpdate=this.cameras.current.copy(),this._sceneExtentChangeHandle=this.view.watch("dataExtent",function(t){this._dataExtentChanged()}.bind(this))},_dataExtentChanged:function(){this.view.ready&&(this._updateAltitudeConstraintFromExtent(this.view.dataExtent),this._reapplyConstraints(),this._camerasChanged())},_updateAutoAltitudeConstraints:function(t){},updateRenderCoordsHelper:function(t,e){this.inherited(arguments),this._userConstraints&&"auto"!==this._userConstraints.altitude.mode||(this.constraints.altitude=D.Altitude.scale(this.defaultConstraints.altitude,t.unitInMeters)),this._userConstraints&&"auto"!==this._userConstraints.tilt.mode||(this.constraints.tilt=D.Tilt.scale(this.defaultConstraints.tilt,t.unitInMeters)),this._updateAltitudeConstraintFromExtent(this.view.dataExtent),this._reapplyConstraints(),this._camerasChanged()},_updateAltitudeConstraintFromExtent:function(t){t.xmax-t.xmin>0&&(this._updateAutoAltitudeConstraints(t),this._userConstraints&&"auto"!==this._userConstraints.altitude.mode||this._autoUpdateAltitudeConstraint())},destroy:function(){this._disconnectUserConstraints(),this._sceneExtentChangeHandle.remove()},_updateTargetCenterForElevation:function(t){if(t||this.enableElevationUpdates&&this.updateTargetByElevationUpdates){var e=this.getCameraIntersectTerrain(this.cameras.target.eye,this.cameras.target.center,this.cameras.target.up,C);e&&!e.equals(this.cameras.target)&&this.setCamera(e,{internalUpdate:!0})}},step:function(){var t=this.pan&&this.pan.continuous&&this.pan.continuous.active,e=t||this.pan.active||this.zoom.active||this.rotate.active;if(!e&&this._recomputeTargetCenterForElevationChange){var i=this._targetCameraChangedByElevationUpdate;this._updateTargetCenterForElevation(),i&&(this._targetCameraChangedByElevationUpdate=!0),this._recomputeTargetCenterForElevationChange=!1}this.inherited(arguments)},applyConstraints:function(t,e){if(!this.constraintsEnabled)return!1;var i=this._cameraElevationAngle(t,A),n=this.constraints.tilt.min(i.distance),a=this.constraints.tilt.max(i.distance),s=0;!e&&i.tilt>a?s=i.tilt-a:i.tilt<n&&(s=i.tilt-n);var r=!1;Math.abs(s)>.01&&(g.cross(f,t.up,E),p.identity(y),p.rotate(y,s,E),p.multiplyVec3(y,f),g.add(t.center,f,t.eye),p.multiplyVec3(y,t.up),r=!0),g.subtract(t.center,t.eye,H);var o=t.distance,l=this.limitAltitude(o,t.center,H,o);return o!==l&&(g.scale(H,-l/o),g.add(t.center,H,t.eye),r=!0),this._autoUpdateTiltConstraint(a),r},limitTiltByConstraints:function(t,e,i,n){if(!this.constraintsEnabled)return t;var a=this.constraints.tilt.min(i),s=this.constraints.tilt.max(i);return(void 0===n||n>0)&&t>=s?t=s:(void 0===n||0>n)&&a>=t&&(t=a),t=this.limitTiltByAltitudeConstraints(t,e,i,n),this._autoUpdateTiltConstraint(s),t},_autoUpdateAltitudeConstraint:function(){var t=this._userConstraints&&this._userConstraints.altitude;t&&"auto"===t.mode&&t.autoUpdate(this.constraints.altitude.min(this),this.constraints.altitude.max(this))},_autoUpdateTiltConstraint:function(t){var e=this._userConstraints&&this._userConstraints.tilt;void 0===t&&(t=this.constraints.tilt.max(this.cameras.target.distance)),e&&"auto"===e.mode&&e.autoUpdate(n.rad2deg(t))},_disconnectUserConstraints:function(){if(this._userConstraints){this._userConstraintsHandles.forEach(function(t){t.remove()}),this._userConstraints=null,this._userConstraintsHandles.length=0;var t=this.renderUnitInMeters;this.constraints.tilt=D.Tilt.scale(this.defaultConstraints.tilt,t),this.constraints.altitude=D.Altitude.scale(this.defaultConstraints.altitude,t)}},_connectUserConstraints:function(t){t&&(this._userConstraints=t,this._userConstraintsHandles.push(e.init(t,"tilt.mode",this._tiltModeHandler),e.init(t,"clipDistance.mode",this._clipDistanceModeHandler),e.init(t,"altitude.mode",this._altitudeModeHandler),e.init(t,"collision.enabled",this._collisionEnabledHandler)))},_camerasChanged:function(){this.targetChanged(),this.currentChanged(),this.currentHasReachedTarget()&&this.currentReachedTarget()},_reapplyConstraints:function(){var t=!1;this.applyConstraints(this.cameras.current)&&(t=!0),this.applyConstraints(this.cameras.target)&&(t=!0),t&&this._camerasChanged()},_userConstraintsChanged:function(){this._reapplyConstraints()},_altitudeMinMaxHandler:function(t,e,i){this._userConstraintsChanged()},_tiltMaxHandler:function(t,e,i){this._userConstraintsChanged()},_tiltModeHandler:function(t){this._tiltHandles.forEach(function(t){t.remove()}),this._tiltHandles.length=0,"auto"===t?this.constraints.tilt=D.Tilt.scale(this.defaultConstraints.tilt,this.renderUnitInMeters):(this._tiltHandles.push(this._userConstraints.watch("tilt.max",this._tiltMaxHandler)),this.constraints.tilt=l(this._userConstraints)),this._tiltMaxHandler()},_altitudeModeHandler:function(t){this._altitudeHandles.forEach(function(t){t.remove()}),this._altitudeHandles.length=0,"auto"===t?(this.constraints.altitude=D.Altitude.scale(this.defaultConstraints.altitude,this.renderUnitInMeters),this._autoUpdateAltitudeConstraint()):(this._altitudeHandles.push(this._userConstraints.watch("altitude.min",this._altitudeMinMaxHandler),this._userConstraints.watch("altitude.max",this._altitudeMinMaxHandler)),this.constraints.altitude=h(this._userConstraints)),this._altitudeMinMaxHandler()},_collisionEnabledHandler:function(t,e,i){this.constraints.collision=d(this._userConstraints),this._userConstraintsChanged()},_clipDistanceNearFarHandler:function(t,e,i){"auto"!==this._userConstraints.clipDistance.mode&&(this.cameras.target.near=this._userConstraints.clipDistance.near,this.cameras.target.far=this._userConstraints.clipDistance.far,this.cameras.current.near=this._userConstraints.clipDistance.near,this.cameras.current.far=this._userConstraints.clipDistance.far),this._camerasChanged()},_clipDistanceModeHandler:function(t){this._clipDistanceHandles.forEach(function(t){t.remove()}),this._clipDistanceHandles.length=0,"auto"!==t&&this._clipDistanceHandles.push(this._userConstraints.watch(["clipDistance.near","clipDistance.far"],this._clipDistanceNearFarHandler)),this._clipDistanceNearFarHandler()},_updateAutoNearFar:function(t){var e=this._userConstraints&&this._userConstraints.clipDistance;if(!e||"auto"===e.mode){var i=this.renderUnitInMeters,n=this.distanceToSilhouette(t,this.view.dataExtent,i,this._getTerrainElevationBelowCamera(t),b);t.far=n.distance/i,t.far/n.maxFarNearRatio>this.minNearDistance?t.near=t.far/n.maxFarNearRatio:(t.near=this.minNearDistance,t.far=t.near*n.maxFarNearRatio),e&&t===this.cameras.current&&e.autoUpdate(t.near,t.far)}},constrainTargetEyeByElevation:function(t){if(!this.elevationProvider||!this.elevationProvider.spatialReference)return!1;var e=this.cameras.target;t&&this._targetCameraBeforeElevationUpdate.copyFrom(e);var i=this._applyTargetEyeElevationConstraint(e.eye,this._getTerrainElevationBelowCamera(e));return i},constrainTargetEyeByElevationAndMoveLookAt:function(){g.set(this.cameras.target.eye,x),this.constrainTargetEyeByElevation()&&(g.subtract(x,this.cameras.target.eye),g.subtract(this.cameras.target.center,x))},targetChanged:function(t){this.inherited(arguments),this._targetCameraChangedByElevationUpdate=!1,this._updateAutoNearFar(this.cameras.target),this.currentHasReachedTarget()&&this.currentReachedTarget()},currentChanged:function(){this._updateAutoNearFar(this.cameras.current),this.inherited(arguments)},_applyTargetEyeElevationConstraint:function(t,e){if(!this.constraintsEnabled)return!1;var i=this.renderCoordsHelper,n=i.getAltitude(t),a=this.constraints.collision.enabled;return a&&n-e<this.cameraElevationMargin?(i.setAltitude(e+this.cameraElevationMargin,t,0),!0):!1},_cameraElevationAngle:function(t,e){e=e||{tilt:0,distance:0},this.renderCoordsHelper.worldUpAtPosition(t.center,M),g.subtract(t.eye,t.center,f);var i=g.length(f),n=Math.acos(g.dot(f,M)/i/g.length(M));return e.tilt=n,e.distance=i,e},_elevationChangeTileHandler:function(t){if(this.enableElevationUpdates&&this._targetCameraChangedByElevationUpdate&&this.constraintsEnabled){var e=this.renderCoordsHelper,i=!1,n=t.tile.extent,a=this._targetCameraBeforeElevationUpdate.eye,s=e.fromRenderCoords(a,v,t.spatialReference);n[0]<=s.x&&n[1]<=s.y&&n[2]>s.x&&n[3]>s.y&&(T.copyFrom(this.cameras.target),this.cameras.target.copyFrom(this._targetCameraBeforeElevationUpdate),this.constrainTargetEyeByElevation(),i=!T.equals(this.cameras.target),i=this.applyConstraints(this.cameras.target)||i),i&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0)}},_elevationChangeHandler:function(t){var e=this.renderCoordsHelper,i=this.cameras.target.eye,n=t.extent,a=e.fromRenderCoords(i,t.spatialReference),s=n[0]<=a.x&&n[1]<=a.y&&n[2]>a.x&&n[3]>a.y;if(s&&(this._terrainElevationAtCameraEye=null),this.enableElevationUpdates&&this.constraintsEnabled){var r=!1;if(s&&(this._targetCameraChangedByElevationUpdate||this._targetCameraBeforeElevationUpdate.copyFrom(this.cameras.target),r=this._applyTargetEyeElevationConstraint(i,this._getTerrainElevationBelowCamera(this.cameras.target))),r&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0),!this._recomputeTargetCenterForElevationChange){var l=e.fromRenderCoords(this.cameras.target.center,t.spatialReference),h=Math.max(l.x,a.x),d=Math.min(l.x,a.x),c=Math.max(l.y,a.y),u=Math.min(l.y,a.y),_=o.intersectIntervals([[d,h]],[[n[0],n[2]]]),m=o.intersectIntervals([[u,c]],[[n[1],n[3]]]);_.length>0&&m.length>0&&(this._recomputeTargetCenterForElevationChange=!0)}}},_getTerrainElevationBelowCamera:function(t){if(this.elevationProvider&&this.elevationProvider.spatialReference){if(!c(this._terrainElevationAtCameraEye,t.eye)){var e=this.elevationProvider.spatialReference,i=this.renderCoordsHelper.fromRenderCoords(t.eye,e);this._terrainElevationBelowCamera=this.elevationProvider.getElevation(i)||0,this._terrainElevationAtCameraEye=t.eye}}else this._terrainElevationBelowCamera=0;return this._terrainElevationBelowCamera},getCenterIntersectTerrain:function(t,e,i){i||(i=g.create()),g.set(e,i);var n=this.picker.pickAlongRay(t,i);return this.picker.pickedIntersectionPoint(n,i)||this.getCenterIntersectManifold(t,e,i)||this.getFallbackCenterAlongViewDirection(t,e,i),i},getCenterIntersectManifold:function(t,e,i){return g.subtract(e,t,f),this.intersectManifold(t,f,0,i)},getCameraIntersectTerrain:function(t,e,i,n){var a=this.cameras.current.copy();if(t&&(a.eye=t),e&&(a.center=e),i&&(a.up=i),this.getCenterIntersectTerrain(a.eye,a.center,U),g.dist2(a.eye,U)<this.minPoiDist&&this.constraintsEnabled){var s=this.constraints.collision.enabled;g.set(a.viewForward,f),g.scale(f,this.minPoiDist),s?g.subtract(U,f,a.eye):g.add(a.eye,f,U);var r=this.renderCoordsHelper,o=r.getAltitude(a.eye);s&&o<this.cameraElevationMargin&&(g.subtract(U,a.eye,f),r.setAltitude(this.cameraElevationMargin,a.eye),g.add(a.eye,f,U)),a.markViewDirty()}if(n>0){var l=g.dist(a.eye,a.center),h=g.dist(U,a.center);h>l*n&&(a.center=U)}else a.center=U;return a}});return D.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT=!0,D.Tilt=function(t){this.min=t.min,this.max=t.max},D.Tilt.scale=function(t,e){return 1===e?t:new D.Tilt({min:function(i){return t.min(i*e)},max:function(i){return t.max(i*e)}})},D.Tilt.prototype.apply=function(t,e){return n.clamp(t,this.min(e),this.max(e))},D.Altitude=function(t){this.min=t.min,this.max=t.max},D.Altitude.scale=function(t,e){return 1===e?t:new D.Altitude({min:function(i){return t.min(i)/e},max:function(i){return t.max(i)/e}})},D.Altitude.prototype.apply=function(t,e){return n.clamp(e,this.min(t),this.max(t))},D.Collision=function(t){this.enabled=null!=t?t:!0},D});